using repetitorbot.Entities.States;
using Scriban;
using Telegram.Bot;

namespace repetitorbot.Handlers;

internal class CompleteQuizHandler(ITelegramBotClient client) : Handler
{
    public override async Task Handle(Context context)
    {
        if (context.User.State is QuizState state)
        {
            var responses = state.QuizResponses;

            var avg = responses.Sum(x => x.Ratio) / (double)responses.Count;

            var pattern = avg switch
            {
                > 90 => "üéâ –¢—ã –∑–∞–∫–æ–Ω—á–∏–ª –æ–ø—Ä–æ—Å–Ω–∏–∫! –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç: {{percent}}% –≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤. –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
                > 50 and < 90 => "üëç –¢—ã –∑–∞–≤–µ—Ä—à–∏–ª –æ–ø—Ä–æ—Å–Ω–∏–∫! –£ —Ç–µ–±—è {{percent}}% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö ‚Äî –Ω–µ–ø–ª–æ—Ö–æ, –Ω–æ –º–æ–∂–Ω–æ –µ—â—ë –ª—É—á—à–µ üòâ",
                _ => "üòï –¢—ã –¥–æ—à—ë–ª –¥–æ –∫–æ–Ω—Ü–∞, –Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∫–∞ —Å–∫—Ä–æ–º–Ω—ã–π: {{percent}}%. –ü–æ–ø—Ä–æ–±—É–µ—à—å –µ—â—ë —Ä–∞–∑?"
            };

            var template = Template.Parse(pattern);
            var text = template.Render(new { Percent = avg.ToString() });

            await client.SendMessage(
                chatId: context.Update.GetChatId(),
                text: text
            );
        }
        await base.Handle(context);
    }
}
